# Generated by Django 5.1.6 on 2025-04-29 11:48

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=150, unique=True)),
                ('brand', models.CharField(max_length=100, verbose_name='Марка')),
                ('model', models.CharField(max_length=100, verbose_name='Модель')),
                ('car_type', models.CharField(choices=[('Sedan', 'Седан'), ('SUV', 'Внедорожник'), ('Hatchback', 'Хэтчбек'), ('Cabriolet', 'Кабриолет'), ('Coupe', 'Купе'), ('Minivan', 'Минивэн'), ('Pickup', 'Пикап')], default='Sedan', max_length=20, verbose_name='Тип')),
                ('year', models.PositiveIntegerField(verbose_name='Год выпуска')),
                ('price_per_day', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена за день (₸)')),
                ('is_available', models.BooleanField(default=True, verbose_name='Доступна')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('main_image', models.ImageField(upload_to='cars/main/', verbose_name='Главная фотография')),
                ('seats', models.IntegerField(default=5, verbose_name='Места')),
                ('doors', models.IntegerField(default=4, verbose_name='Двери')),
                ('mileage', models.IntegerField(default=0, verbose_name='Пробег (км)')),
                ('air_conditioner', models.BooleanField(default=True, verbose_name='Кондиционер')),
                ('transmission', models.CharField(choices=[('Manual', 'Механика'), ('Automatic', 'Автоматическая')], default='Manual', max_length=20, verbose_name='Трансмиссия')),
                ('fuel_type', models.CharField(choices=[('PB95', 'PB95'), ('PB98', 'PB98')], default='PB95', max_length=20, verbose_name='Тип топлива')),
                ('features', models.JSONField(blank=True, help_text='JSON: ключ → значение, например {"ABS": true, "Cruise Control": true}', null=True, verbose_name='Дополнительные характеристики')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
            ],
            options={
                'verbose_name': 'Машина',
                'verbose_name_plural': 'Машины',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CarPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='cars/gallery/', verbose_name='Фото')),
                ('alt_text', models.CharField(blank=True, max_length=200, verbose_name='Alt‑текст')),
                ('order', models.PositiveSmallIntegerField(default=0, verbose_name='Порядок')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Загружено')),
            ],
            options={
                'verbose_name': 'Фото Машины',
                'verbose_name_plural': 'Фото Машин',
                'ordering': ['order', 'uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='Dealer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('address', models.TextField(verbose_name='Адрес')),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9, verbose_name='Широта')),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9, verbose_name='Долгота')),
                ('is_active', models.BooleanField(default=True, help_text='Снимите галочку, чтобы заблокировать дилера', verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
            ],
            options={
                'verbose_name': 'Дилер',
                'verbose_name_plural': 'Дилеры',
            },
        ),
        migrations.CreateModel(
            name='CarLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9, verbose_name='Широта')),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9, verbose_name='Долгота')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('car', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='location', to='rental.car', verbose_name='Автомобиль')),
            ],
            options={
                'verbose_name': 'Расположение Машины',
                'verbose_name_plural': 'Расположение Машин',
            },
        ),
        migrations.AddField(
            model_name='car',
            name='photos',
            field=models.ManyToManyField(blank=True, to='rental.carphoto', verbose_name='Фото'),
        ),
        migrations.CreateModel(
            name='CarReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.FloatField(validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(5.0)], verbose_name='Оценка')),
                ('comment', models.TextField(blank=True, verbose_name='Комментарий')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата отзыва')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='rental.car', verbose_name='Автомобиль')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользватель')),
            ],
            options={
                'verbose_name': 'Отзыв Машины',
                'verbose_name_plural': 'Отзывы Машин',
            },
        ),
        migrations.AddField(
            model_name='car',
            name='dealer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='rental.dealer', verbose_name='Дилер'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('message', models.TextField(blank=True)),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Rental',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Начало аренды')),
                ('end_time', models.DateTimeField(verbose_name='Окончание аренды')),
                ('full_name', models.CharField(max_length=255, verbose_name='ФИО')),
                ('phone_number', models.CharField(max_length=20, verbose_name='Телефон')),
                ('address', models.TextField(verbose_name='Адрес')),
                ('city', models.CharField(max_length=100, verbose_name='Город')),
                ('pickup_location', models.CharField(max_length=255, verbose_name='Место получения')),
                ('pickup_date', models.DateField(verbose_name='Дата получения')),
                ('pickup_time', models.TimeField(verbose_name='Время получения')),
                ('dropoff_location', models.CharField(max_length=255, verbose_name='Место возврата')),
                ('dropoff_date', models.DateField(verbose_name='Дата возврата')),
                ('dropoff_time', models.TimeField(verbose_name='Время возврата')),
                ('payment_method', models.CharField(choices=[('CARD', 'Банковская карта'), ('PAYPAL', 'PayPal'), ('BITCOIN', 'Bitcoin')], max_length=10, verbose_name='Метод оплаты')),
                ('card_number', models.CharField(blank=True, max_length=16, null=True, verbose_name='Номер карты')),
                ('expiration_date', models.CharField(blank=True, max_length=7, null=True, verbose_name='Срок действия карты (MM/YY)')),
                ('card_holder', models.CharField(blank=True, max_length=255, null=True, verbose_name='Владелец карты')),
                ('cvc', models.CharField(blank=True, max_length=3, null=True, verbose_name='CVC')),
                ('is_paid', models.BooleanField(default=False, verbose_name='Оплачено')),
                ('total_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Итоговая цена')),
                ('status', models.CharField(choices=[('WAITING', 'Ожидание ответа от Stripe'), ('OWNED', 'Пользватель еще пользуется услугой'), ('COMPLETED', 'Завершена'), ('REJECTED', 'Отказано')], default='WAITING', max_length=20, verbose_name='Статус')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rental.car', verbose_name='Автомобиль')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Аренда',
                'verbose_name_plural': 'Аренды',
            },
        ),
        migrations.CreateModel(
            name='Fine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Сумма штрафа')),
                ('reason', models.TextField(verbose_name='Причина')),
                ('issued_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('rental', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rental.rental', verbose_name='Аренда')),
            ],
            options={
                'verbose_name': 'Штраф',
                'verbose_name_plural': 'Штрафы',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('TOP_UP', 'Пополнение баланса'), ('RENTAL', 'Оплата аренды')], max_length=10, verbose_name='Тип')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Сумма')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Дата')),
                ('status', models.CharField(choices=[('WAITING', 'Ожидание ответа от strype'), ('COMPLETED', 'Закончен'), ('REJECTED', 'Отказано')], max_length=20, verbose_name='Статус')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Транзакция',
                'verbose_name_plural': 'Транзакции',
            },
        ),
        migrations.CreateModel(
            name='TripTracking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Время фиксации')),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9, verbose_name='Широта')),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9, verbose_name='Долгота')),
                ('rental', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tracking', to='rental.rental', verbose_name='Аренда')),
            ],
            options={
                'verbose_name': 'Трекер Машины',
                'verbose_name_plural': 'Трекер Машин',
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rental.car')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'car')},
            },
        ),
    ]
